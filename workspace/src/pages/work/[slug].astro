---
import WorkDetail from "../../_components/page/work-single/index.view";
import { BREAK_POINTS } from "../../_foundation/const/mq";
import { formatCloudinaryAPI } from "../../_foundation/cloudinary"
import { createWorkRepository } from "../../_repositories";
import Layout from "../../layout.astro";

const { slug } = Astro.params;
const { cookies } = Astro

const refreshToken = cookies.get("token")?.value
const reqHeaders = {
  "Content-Type": "application/json",
  ...(refreshToken && { "Authorization": `Bearer ${refreshToken}` })
}
const workRepo = createWorkRepository(reqHeaders)
const result = await workRepo.findById({
  id: slug as string,
})

if (!result) {
  return new Response(null, {
    status: 404,
    statusText: "Not found"
  });
}

export const prerender = false;
---

<Layout title={result.work.title} permalink={`/work/${result.work.slug}/`} namespace="work-single">
  <link
    slot="prependHead"
    as="image"
    crossorigin="anonymous"
    href={formatCloudinaryAPI(result.work.mv["pc"].url, "f_auto,q_auto,w_1680")}
    media={BREAK_POINTS["pc"]}
    rel="preload"
  />
  <WorkDetail post={result.work} nextPost={result.work.next} projectNumber={result.work.index} namespace="work-single" />
</Layout>
