---
import { mq } from '../../_foundation/mq';
import { cloudinaryAPIConverter } from '../../_foundation/converter';
import WorksDetail from '../../_components/page.works-single/index.view';
import { createWorksRepository } from '../../_repositories/works/index';
import Layout from '../../layout.astro';

export async function getStaticPaths() {
  const repo = createWorksRepository();
  const result = await repo.findMany({
    order: "desc",
    per_page: 99,
  });

  const last = result.works[result.works.length - 1]

  return result.works.map((item, index) => ({
    params: {
      slug: item.slug,
    },
    props: {
      post: item,
      next: last.id === item.id ? result.works[0] : result.works[index + 1],
      totalCount: result.totalCount,
      currentIndex: index + 1
    },
  }));
}

const { post, next, totalCount, currentIndex } = Astro.props;
---

<Layout title={post.title} permalink={`/works/${post.slug}/`}>
  <link
    slot="prependHead"
    as="image"
    crossorigin="anonymous"
    href={cloudinaryAPIConverter(post.thumb["sp"].url, "f_auto,q_auto,w_1680")}
    media={mq.sp}
    rel="preload"
  />
  <link
    slot="prependHead"
    as="image"
    crossorigin="anonymous"
    href={cloudinaryAPIConverter(post.thumb["pc"].url, "f_auto,q_auto,w_1680")}
    media={mq.pc}
    rel="preload"
  />
  <WorksDetail post={post} nextPost={next} now={currentIndex} max={totalCount} />
</Layout>
