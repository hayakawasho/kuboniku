import type { SvelteComponent } from 'svelte'
import { domRefs } from './domRefs'
import type { IComponent, RefValue, ReturnDOMRef } from './types'

type SvelteAppType = typeof SvelteComponent

class WithSvelte implements IComponent {
  #app!: SvelteComponent

  constructor(private SvelteApp: SvelteAppType) {}

  setup(element: HTMLElement, props = {}) {
    const rootRef = element

    const useDOMRef = <T>(ref: RefValue): ReturnDOMRef<T> => ({
      refs: domRefs(ref, rootRef)
    })

    const newProps = {
      ...props,
      useDOMRef,
    }

    this.#app = new this.SvelteApp({
      target: rootRef,
      props: newProps,
    })
  }

  destroy() {
    this.#app.$destroy()
  }
}

function withSvelte(Svelte: SvelteAppType): IComponent {
  return new WithSvelte(Svelte)
}

export { withSvelte }
